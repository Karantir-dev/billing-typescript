name: Ansible Deployment
on:
  push:
    branches:
      - 'dev'
jobs:
  jest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install -f
      - run: npm run test
      - name: test status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always()
  eslint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
      - run: npm install -g npm
      - run: npm install
      - run: npm run lint
      - name: linter status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: always()

  deploy:
    needs: [eslint, jest]
    name: Deploy image to server
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1

      - name: Get current date
        id: date
        run: echo "::set-output name=date::$(date +'%Y-%m-%d-%H')"
      
      - name: Test with environment variables
        run: echo $TAG_NAME - $RELEASE_NAME
        env:
          RELEASE_NAME: release-${{ steps.date.outputs.date }}

      - name: Login to docker hub
        env:
          DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
          DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
          RELEASE_NAME: release-${{ steps.date.outputs.date }}
        run: |
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          docker build -t zomro-bill-dev .
          docker tag zomro-bill-dev:latest zomrocom/zomro-bill-dev:latest
          docker tag zomrocom/zomro-bill-dev:latest zomrocom/zomro-bill-dev:$RELEASE_NAME
          docker push $DOCKER_USERNAME/zomro-bill-dev:latest
          docker push $DOCKER_USERNAME/zomro-bill-dev:$RELEASE_NAME
      - name: Update Version
        run: |
          sed -i "s|zomrocom/zomro-bill-dev|zomrocom/zomro-bill-dev:$RELEASE_NAME|" $GITHUB_WORKSPACE/deployment/deployment.yml
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run:
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_CL_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment/deployment.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/zomro-bill-deployment -n dev
      
      - name: Deploy status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
