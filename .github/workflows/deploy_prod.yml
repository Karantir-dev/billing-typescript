name: Deployment - Prod
on:
  push:
    branches:
      - 'main'
      
env:
  IMAGE_NAME: ${{secrets.DOCKER_USERNAME}}/zomro-bill-prod
  PREFIX: release-${{ github.run_number }}

jobs:
  jest:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [ v16.13.1 ]
        npm-version: [ 8.1.2 ]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -f
      - run: npm run test
      - name: test status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure()

  eslint:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [16.x]
    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
      - run: npm install -g npm
      - run: npm install
      - run: npm run lint
      - name: linter status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }} # required
        if: failure()

  build_and_push:
    needs: [jest, eslint]
    name: Build and push bill docker
    runs-on: ubuntu-latest
    env:
      DOCKER_USERNAME: ${{secrets.DOCKER_USERNAME}}
      DOCKER_PASSWORD: ${{secrets.DOCKER_PASSWORD}}
    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      
      - name: Test with environment variables
        run: |
          echo $TAG_NAME - ${{ env.PREFIX }}
          
      - name: Login to docker hub
        run: 
          docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD
          
      - name: Build image 
        run: |
          docker build -f Dockerfile.prod -t $IMAGE_NAME .
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:latest
          docker tag $IMAGE_NAME:latest $IMAGE_NAME:${{ env.PREFIX }}
      
      - name: Push in dockerhub 
        run: |
          docker push $IMAGE_NAME:latest
          docker push $IMAGE_NAME:${{ env.PREFIX }}
          
      - name: Push status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()

  deploy_on_server:
    needs: [build_and_push]
    name: Deploy version on server
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v1
      
      - name: Test with environment variables
        run: |
          echo $TAG_NAME - ${{ env.PREFIX }}
        
      - name: Update Version
        run: |
          sed -i "s|$IMAGE_NAME|$IMAGE_NAME:${{ env.PREFIX }}|" $GITHUB_WORKSPACE/deployment/deployment_prod.yml
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Save DigitalOcean kubeconfig with short-lived credentials
        run:
          doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.K8S_CL_NAME }}

      - name: Deploy to DigitalOcean Kubernetes
        run: kubectl apply -f $GITHUB_WORKSPACE/deployment/deployment_prod.yml

      - name: Verify deployment
        run: kubectl rollout status deployment/zomro-bill-prod-deployment -n prod

      - name: Clean CloudFlare cache
        run: |
          sleep 5;
          curl -X POST "https://api.cloudflare.com/client/v4/zones/6562ccdfeb6b2a7793f4867f8bf6f955/purge_cache" \
          -H "Authorization: Bearer ${{ secrets.CLOUDFLARE_TOKEN }}" \
          -H "Content-Type:application/json" \
          --data "{\"purge_everything\":true}"  

      - name: Deploy status
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: all
          mention: 'channel'
          channel: 'github-actions'
          if_mention: always
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: failure()